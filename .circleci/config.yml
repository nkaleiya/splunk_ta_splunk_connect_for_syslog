# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  docker: circleci/docker@0.5.13
  go: circleci/go@0.2.0
  snyk: snyk/snyk@0.0.8
  versioning: kollex/versioning@1.0.0
jobs:
  build:
    machine:
      docker_layer_caching: true
      image: ubuntu-1604:201903-01
#    docker:
#      # specify the version you desire here
#      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #working_directory: /project

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      REGISTRY: docker.pkg.github.com
    steps:
      - checkout
#      - setup_remote_docker:
#          docker_layer_caching: true
      #- docker/install-docker
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}


      - docker/check:
          registry: $REGISTRY
          docker-username: GITHUB_USER
          docker-password: GITHUB_TOKEN
      - run: mkdir -p test-results
      - run: ./gradlew testAppInspect
      - store_test_results:
          path: test-results
      - persist_to_workspace:
          root: build
          paths:
            - package

  publish-tag:
      docker:
        - image: circleci/buildpack-deps:18.04
      steps:
        - go/install
        - attach_workspace:
            at: /tmp/package
        - run: ls -l /tmp
        - run: ls -l /tmp/package
        - run:
            name: "Publish edge on GitHub"
            command: |
              PATH=$PATH:/usr/local/go/bin
              go get -v -u github.com/tcnksm/ghr
              CIRCLE_BRANCH_CLEAN=$(echo ${CIRCLE_BRANCH} | sed 's/[^a-zA-Z0-9\._-]//g')
              if [ -n "${CIRCLE_TAG}" ]; then DOCKER_TAG=${CIRCLE_TAG}; else DOCKER_TAG="${CIRCLE_BRANCH_CLEAN}"; fi
              if [ -n "${CIRCLE_TAG}" ]; then VERSION=${CIRCLE_TAG}; else VERSION="${CIRCLE_BRANCH_CLEAN}@${CIRCLE_SHA1:0:6}"; fi
              $HOME/go/bin/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete $VERSION /tmp/package/splunkbase/
        - store_artifacts:
            path: /tmp/package/

workflows:
  version: 2
  build-branches:
    jobs:
      - build

  build-tag:
    jobs:
      - build:
          filters:
            tags:
              only: /^\d*\.\d*\.\d*.*$/
            branches:
              ignore: /.*/
      - publish-tag:
          requires:
            - build
          filters:
            tags:
              only: /^\d*\.\d*\.\d*.*$/
            branches:
              ignore: /.*/